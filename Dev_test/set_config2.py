import pickle
from UBiC_Search_def import perct
from decimal import Decimal


""" 매수 종목 검색 참고사항 """

""" ============================================ 참 고 ========================================================== """
# 종목당 100,000 원 기준 : 1차 추매 300,000 / 2차 추매 600,000 / 3차 추매 1,800,000 * 4, 5,400,000, 4차 (10만:4종목)
# 종목당 50,000 원 기준 : 1차 추매 150,000 / 2차 추매 300,000 / 3차 추매 900,000 * 7, 2,700,000
# 종목당 30,000 원 기준 : 1차 추매 90,000 / 2차 추매 180,000 / 3차 추매 540,000 * 30, 16,200,000 (40, 21,600,000)
# 종목당 25,000 원 기준 : 1차 추매 75,000 / 2차 추매 150,000 / 3차 추매 450,000 * 30, 13,500,000 (40, 18,000,000)
# 종목당 20,000 원 기준 : 1차 추매 60,000 / 2차 추매 120,000 / 3차 추매 360,000 * 40, 14,400,000 (35, 12,600,000)(30, 10,800,000 )
# 종목당 10,000 원 기준 : 1차 추매 30,000 / 2차 추매 60,000 / 3차 추매 180,000 * 40 7,200,000 
# 종목당 6,000 원 기준 : 1차 추매 18,000 / 2차 추매 36,000 / 3차 추매 108,000
# 종목당 5,500 원 기준 : 1차 추매 16,500 / 2차 추매 33,000 / 3차 추매 99,000
# 종목당 5,000 원 기준 : 1차 추매 15,000 / 2차 추매 30,000 / 3차 추매 90,000
# 총 투자금 100만원 / 투자비율(3.2%) / 4종목 / 7,200원
# 100만원 - 25만원 = 75만원


""" =============================== 로그인 파일 변수 설정 ===================================== """
ofn2 = '/root/UBiCauto/Acct/upbit_buty.txt'

""" =============================== 매수 변수 설정 =========================================== """

b_money = 9500                  # 0.75 % 시 7100원 부터 매수가능함 10,000 초기 매수 금액 설정 (금액이 적어지면 신규매수 시 add_num에 못들어가서 1차 추매 시 "nonetype error")

# ========================= b_money 계산 ======================== #
bp = 10.5                          # 보유금액의 % 매수(개당 매수금액 계산필요)  **
b_count = 10                     # 보유 수량 제한 설정                   **
blow_money = 9500               # 최저 매수금액
# ============================================================== #
bg = perct(0.1)                 # 매수예상 지정가 < 현재가 bg = - 0.5% 에 매수 실행, 현재 3m으로 현재가 매수대기 들어감(ex - 0.01 --> 1%)
gt = 25                         # 매수대기 종목 취소 시간 ( 초, 분(*) )
code = 2                        # 1:기본 상승장, 2:여러종목 검색(3분기준)
""" --------------------------------------------------------------------------------------------- """
y3h3or = 60      #1             # (전3일) (고가 - 시가) 차 : 8 8, 6(%) (전3일중) (기준 : 시가) : 'r_y3h3o:전일봉 높이' 30
tho_30r = 30     #2     20      # (금30분)(고가 - 시가) 차 : 10(%) 30분봉  :  'r_tho_30:금일봉(30분) 높이'
tho_1r = 30      #2     20      # (금1분) (고가 - 시가) 차 : 10(%) 1분봉 (60분 내/2분) : 'r_tho_1' 금일(1분) 15
tpor = 30                       # (금일)  (현가 - 시가) 차 : 10(%) (기준 : 시가) : 'r_tpo:금일봉 현 상태' 6

""" --------------------------------------------------------------------------------------------- """
p5g = 20          # 10            # 현가 -  전5이 차이 (기준 : 전5이)
p10g = 10                        # (x) 현가 - 전10이 차이 (전기준 : 10이)
p510g = 30        # 10           # 전5이 - 전10이 차이 (기준 : 10이)
p550g = 10                       # (x) 전5이 - 전50이 차이 (기준 : 50이)
p1050g = 120                     # 전10이 - 전50이 차이 (기준 : 50이)

""" --------------------------------------------------------------------------------------------- """
nw = 90                         # 현재가가 nw이평 이상일 경우 매수(매수 하한)
npct = perct(50)                # nw이평에서 npct % 이상일 경우 매수(매수 하한)

yg = 60                         # 전일(yg이평 < 종가) 첫번째 기준 보다 넓게

""" ========== 매매 제외할 종목 ========== """
ext_b = ["KRW-BTT"]
ext_s = []

""" =============================== """


""" =============================== 매도 변수 설정 =========================================== """
ask_p = perct(0.5)                # 매도가 설정 ( 2.1%, 1.1% )
ask_ug = perct(10)                # 매도기준 : 최저 기준 이하 시 적용
ask_pp = perct(1.0)               # 매도 대기 설정 (%) 지정가 설정 시 필요
agt = 10                           # 매도 대기 해제시간 설정 ( 초(*), 분 )
sell_cont = 1                       # 매도 및 추매 ON/OFF 설정 (0: 매도금지, 추매금지, 1: 매도, 추매 가능, 2: 매도가능, 추매금지, 3: 매도금지, 추매가능)

""" --------------------------------------------------------------------------------------------- """
adsp = perct(10)                                   # 추매 시작 전 기준점 (추매 전 매수평단의 ( )% 이하 일 경우부터 추매 진행 시작)
ap = 6                                            # 추매 횟수 제한, 4번 까지
u_p = 4                                           # 추매 변수 (현재가 < 50이의 4% 이하 시 추매 경우, % 설정)

""" --------------- """
l_money = 70000                                 # 추매 5회까지 가능 / 금액 제한 (종목당 보유금액( 보유금액의 2배 까지 증가 가능)
""" --------------- """

""" --------------------------------------------------------------------------------------------- """
# ag1 = 1                     # 추매 금액 (종목 보유금액의 1배)
# ag2 = 1.25                   # 추매 금액 (종목 보유금액의 1.5배) 1.25배
# ag3 = 2                     # 추매 금액 (종목 보유금액의 2배)
# ag4 = 0.75                   # 추매 금액 (종목 보유금액의 2.5배)
# ag5 = 3                     # 추매 금액 (종목 보유금액의 2.5배)

""" 매수금액 : 5020원 추매시점 3,5,7,9/ ap=5/ l_money= 100000/ b_money=5020  """

# ag1 = 1 # 0.7                     # 추매 금액 (종목 보유금액의 0.7배)
# ag2 = 1 # 0.8                     # 추매 금액 (종목 보유금액의 0.8배)
# ag3 = 1 # 0.9                     # 추매 금액 (종목 보유금액의 0.9배)
# ag4 = 1 # 1                       # 추매 금액 (종목 보유금액의 1배)
# ag5 = 1 # 1.5                     # 추매 금액 (종목 보유금액의 1.5배)
# ag6 = 1 # 2                       # 추매 금액 (종목 보유금액의 2배)
# ag7 = 1 # 2                       # 추매 금액 (종목 보유금액의 2배)
# ag8 = 1 # 2                       # 추매 금액 (종목 보유금액의 2배)
""" --------------------------------------------------------------------------------------------- """

""" 매수금액 : 10000원 추매시점 3,5,7,10/ ap=6 / l_money= b_money * 7/ b_money=9500 """
ag1 = 0.6                      # 추매 금액 (종목 보유금액의 배)
ag2 = 0.4                     # 추매 금액 (종목 보유금액의배)
ag3 = 0.4                      # 추매 금액 (종목 보유금액의 배)
ag4 = 1                      # 추매 금액 (종목 보유금액의 배)
ag5 = 1                      # 추매 금액 (종목 보유금액의 배)
ag6 = 1                      # 추매 금액 (종목 보유금액의 배)
ag7 = 1                      # 추매 금액 (종목 보유금액의 배)
ag8 = 1                      # 추매 금액 (종목 보유금액의 배)

""" --------------------------------------------------------------------------------------------- """
abptime = 5                 # 매수완료 후 타이머 (매수평단 갱신 오류 방지)

""" ============================================================================================== """


with open('/root/UBiCauto/data/config_buy2.pickle', 'wb') as fbuy:
    # ----- 매수 변수 ----- #
    pickle.dump(bp, fbuy); pickle.dump(b_count, fbuy); pickle.dump(bg, fbuy)
    pickle.dump(gt, fbuy); pickle.dump(tpor, fbuy); pickle.dump(y3h3or, fbuy)
    pickle.dump(tho_30r, fbuy); pickle.dump(tho_1r, fbuy); pickle.dump(p5g, fbuy)
    pickle.dump(p10g, fbuy); pickle.dump(p510g, fbuy); pickle.dump(p550g, fbuy)
    pickle.dump(p1050g, fbuy); pickle.dump(ext_b, fbuy); pickle.dump(ofn2, fbuy)
    pickle.dump(blow_money, fbuy); pickle.dump(nw, fbuy); pickle.dump(yg, fbuy)
    pickle.dump(npct, fbuy)

with open('/root/UBiCauto/data/config_bcode2.pickle', 'wb') as fbuy:
    pickle.dump(code, fbuy)

with open('/root/UBiCauto/data/config_sell2.pickle', 'wb') as fsell:
    # ----- 매도 변수 ----- #
    pickle.dump(ask_p, fsell); pickle.dump(ask_pp, fsell); pickle.dump(agt, fsell)
    pickle.dump(ap, fsell); pickle.dump(u_p, fsell); pickle.dump(l_money, fsell)
    pickle.dump(ag1, fsell); pickle.dump(ag2, fsell); pickle.dump(ag3, fsell)
    pickle.dump(ag4, fsell); pickle.dump(ag5, fsell); pickle.dump(ag6, fsell); pickle.dump(ag7, fsell); pickle.dump(ag8, fsell)
    pickle.dump(abptime, fsell); pickle.dump(ext_s, fsell); pickle.dump(ofn2, fsell)
    pickle.dump(ask_ug, fsell); pickle.dump(adsp, fsell); pickle.dump(blow_money, fsell)
    
# with open('/root/UBiCauto/data/config_scode2.pickle', 'wb') as fsell:
#     pickle.dump(code, fsell)